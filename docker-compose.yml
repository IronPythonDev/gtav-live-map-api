version: '3.4'

services:
  gtavlivemap.core:
    container_name: 'gtav-live-map-api'
    image: ${DOCKER_REGISTRY-}gtavlivemapcore
    build:
      context: .
      dockerfile: GTAVLiveMap.Core/Dockerfile
    ports:
      - '8090:80'
    depends_on:
      - 'postgres'
    networks:
      - gtavlivemap-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - './logs:/app/logs'
  gtavlivemap.telegram:
    container_name: 'gtav-live-map-telegram'
    build:
      context: .
      dockerfile: GTAVLiveMap.TelegramBot/Dockerfile
    depends_on:
      - 'postgres'
    networks:
      - gtavlivemap-network
  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx
  #   restart: unless-stopped
  #   tty: true
  #   volumes:
  #     - ./:/var/www
  #     - ./nginx/conf.d/:/etc/nginx/conf.d/
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   networks:
  #     - gtavlivemap-network
  #   links:
  #     - 'gtavlivemap.core'
  postgres:
    ports:
      - '5432:5432'
    container_name: gtav-live-map-postgresql
    environment:
      - POSTGRES_PASSWORD=mypass
    volumes:
      - 'gtavlivemap-postgresql-volume:/var/lib/postgresql/data'
      - './init.sql:/docker-entrypoint-initdb.d/init.sql'
    image: 'postgres:10.4'
    networks:
      - gtavlivemap-network

volumes:
  gtavlivemap-postgresql-volume:

networks:
  gtavlivemap-network:
    driver: bridge
